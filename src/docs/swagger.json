{
  "swagger": "2.0",
  "info": {
    "title": "API Clínica Veterinária",
    "version": "1.0.0",
    "description": "Documentação interativa da API da Clínica Veterinária"
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    },
    {
      "name": "Cobrança",
      "description": "Cobranças management endpoints"
    },
    {
      "name": "Consulta",
      "description": "Consultas management endpoints"
    },
    {
      "name": "Estoque",
      "description": "Estoque management endpoints"
    },
    {
      "name": "Medicamento",
      "description": "Medicamento management endpoints"
    },
    {
      "name": "Notificação",
      "description": "Notificação management endpoints"
    },
    {
      "name": "Paciente",
      "description": "Paciente management endpoints"
    },
    {
      "name": "Prontuário",
      "description": "Prontuário management endpoints"
    },
    {
      "name": "Receitas",
      "description": "Receita management endpoints"
    },
    {
      "name": "Tutor",
      "description": "Tutor management endpoints"
    },
    {
      "name": "Veterinário",
      "description": "Veterinário management endpoints"
    },
    {
      "name": "Admins",
      "description": "Admin management endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Insira as informações do JWT token seguindo o padrão: Bearer <token>"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/login/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Realiza login do usuário e retorna um token JWT.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Credenciais de login.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "password": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "username",
                    "password"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login realizado com sucesso.",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "token": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Usuário e/ou senha não informados."
          },
          "401": {
            "description": "Usuário e/ou senha inválidos."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Cria um novo usuário.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cria um novo usuário.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/paciente/{id}": {
      "get": {
        "tags": [
          "Paciente"
        ],
        "description": "Busca um paciente pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do paciente"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente encontrado.",
            "schema": {
              "$ref": "#/definitions/Paciente"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Paciente não encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Paciente"
        ],
        "description": "Atualiza os dados de um paciente existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do paciente"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados do paciente.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Paciente"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente atualizado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Paciente"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Paciente não encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "Paciente"
        ],
        "description": "Exclui um paciente pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do paciente"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Paciente deletado com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Paciente não encontrado."
          }
        }
      }
    },
    "/paciente/": {
      "get": {
        "tags": [
          "Paciente"
        ],
        "description": "Retorna todos os pacientes cadastrados.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pacientes.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Paciente"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Paciente"
        ],
        "description": "Cadastra um novo paciente.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados do novo paciente.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Paciente"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Paciente criado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Paciente"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/tutor/{id}": {
      "get": {
        "tags": [
          "Tutor"
        ],
        "description": "Busca um tutor pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do tutor"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tutor encontrado.",
            "schema": {
              "$ref": "#/definitions/Tutor"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Tutor não encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Tutor"
        ],
        "description": "Atualiza os dados de um tutor existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do tutor"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados do tutor.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tutor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tutor atualizado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Tutor"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Tutor não encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "Tutor"
        ],
        "description": "Exclui um tutor pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do tutor"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Tutor deletado com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Tutor não encontrado."
          }
        }
      }
    },
    "/tutor/": {
      "get": {
        "tags": [
          "Tutor"
        ],
        "description": "Retorna todos os tutores cadastrados.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de tutores.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tutor"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Tutor"
        ],
        "description": "Cadastra um novo tutor.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados do tutor a ser criado.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tutor"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tutor criado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Tutor"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/{id}": {
      "get": {
        "tags": [
          "Admins"
        ],
        "description": "Busca um administrador pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do administrador"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Administrador encontrado.",
            "schema": {
              "$ref": "#/definitions/Admin"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Administrador não encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Admins"
        ],
        "description": "Atualiza os dados de um administrador existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do administrador"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados do administrador.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Admin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Administrador atualizado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Admin"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Administrador não encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "Admins"
        ],
        "description": "Exclui um administrador pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do administrador"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Administrador deletado com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Administrador não encontrado."
          }
        }
      }
    },
    "/admin/": {
      "get": {
        "tags": [
          "Admins"
        ],
        "description": "Retorna todos os administradores cadastrados.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de administradores.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Admin"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Admins"
        ],
        "description": "Cadastra um novo administrador.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados do novo administrador.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Admin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Administrador criado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Admin"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/veterinario/{id}": {
      "get": {
        "tags": [
          "Veterinário"
        ],
        "description": "Busca um veterinário pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do veterinário"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Veterinário encontrado.",
            "schema": {
              "$ref": "#/definitions/Veterinario"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Veterinário não encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Veterinário"
        ],
        "description": "Atualiza os dados de um veterinário existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do veterinário"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados do veterinário.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Veterinario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Veterinário atualizado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Veterinario"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Veterinário não encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "Veterinário"
        ],
        "description": "Exclui um veterinário pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do veterinário"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Veterinário deletado com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Veterinário não encontrado."
          }
        }
      }
    },
    "/veterinario/": {
      "get": {
        "tags": [
          "Veterinário"
        ],
        "description": "Busca um veterinário pelo ID.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID do veterinário",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Veterinário encontrado.",
            "schema": {
              "$ref": "#/definitions/Veterinario"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Veterinário não encontrado."
          }
        }
      },
      "post": {
        "tags": [
          "Veterinário"
        ],
        "description": "Cadastra um novo veterinário.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados do veterinário a ser criado.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Veterinario"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Veterinário criado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Veterinario"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/medicamento/{id}": {
      "get": {
        "tags": [
          "Medicamento"
        ],
        "description": "Busca um medicamento pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do medicamento"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Medicamento encontrado.",
            "schema": {
              "$ref": "#/definitions/Medicamento"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Medicamento não encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Medicamento"
        ],
        "description": "Atualiza os dados de um medicamento existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do medicamento"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados do medicamento.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Medicamento"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Medicamento atualizado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Medicamento"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Medicamento não encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "Medicamento"
        ],
        "description": "Exclui um medicamento pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do medicamento"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Medicamento deletado com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Medicamento não encontrado."
          }
        }
      }
    },
    "/medicamento/": {
      "get": {
        "tags": [
          "Medicamento"
        ],
        "description": "Retorna todos os medicamentos cadastrados.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de medicamentos.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Medicamento"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Medicamento"
        ],
        "description": "Cadastra um novo medicamento.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados do novo medicamento.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Medicamento"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Medicamento criado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Medicamento"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/estoque/{id}": {
      "get": {
        "tags": [
          "Estoque"
        ],
        "description": "Busca um estoque pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do estoque"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Estoque encontrado.",
            "schema": {
              "$ref": "#/definitions/Estoque"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Estoque não encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Estoque"
        ],
        "description": "Atualiza os dados de um estoque existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do estoque"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados do estoque.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Estoque"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estoque atualizado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Estoque"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Estoque não encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "Estoque"
        ],
        "description": "Exclui um estoque pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do estoque"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Estoque deletado com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Estoque não encontrado."
          }
        }
      }
    },
    "/estoque/": {
      "get": {
        "tags": [
          "Estoque"
        ],
        "description": "Retorna todos os estoques cadastrados.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de estoques.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Estoque"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Estoque"
        ],
        "description": "Cadastra um novo estoque.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados do novo estoque.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Estoque"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Estoque criado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Estoque"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/consulta/{id}": {
      "get": {
        "tags": [
          "Consulta"
        ],
        "description": "Busca uma consulta pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da consulta"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta encontrada.",
            "schema": {
              "$ref": "#/definitions/Consulta"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Consulta não encontrada."
          }
        }
      },
      "patch": {
        "tags": [
          "Consulta"
        ],
        "description": "Atualiza os dados de uma consulta existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da consulta"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados da consulta.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Consulta"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Consulta atualizada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Consulta"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Consulta não encontrada."
          }
        }
      },
      "delete": {
        "tags": [
          "Consulta"
        ],
        "description": "Exclui uma consulta pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da consulta"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Consulta deletada com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Consulta não encontrada."
          }
        }
      }
    },
    "/consulta/": {
      "get": {
        "tags": [
          "Consulta"
        ],
        "description": "Retorna todas as consultas cadastradas.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de consultas.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Consulta"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Consulta"
        ],
        "description": "Cadastra uma nova consulta.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados da nova consulta.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Consulta"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Consulta criada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Consulta"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/prontuario/{id}": {
      "get": {
        "tags": [
          "Prontuário"
        ],
        "description": "Busca um prontuário pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do prontuário"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Prontuário encontrado.",
            "schema": {
              "$ref": "#/definitions/Prontuario"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Prontuário não encontrado."
          }
        }
      },
      "patch": {
        "tags": [
          "Prontuário"
        ],
        "description": "Atualiza os dados de um prontuário existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do prontuário"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados do prontuário.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Prontuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prontuário atualizado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Prontuario"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Prontuário não encontrado."
          }
        }
      },
      "delete": {
        "tags": [
          "Prontuário"
        ],
        "description": "Exclui um prontuário pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do prontuário"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Prontuário deletado com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Prontuário não encontrado."
          }
        }
      }
    },
    "/prontuario/": {
      "get": {
        "tags": [
          "Prontuário"
        ],
        "description": "Retorna todos os prontuários cadastrados.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de prontuários.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Prontuario"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Prontuário"
        ],
        "description": "Cadastra um novo prontuário.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados do novo prontuário.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Prontuario"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Prontuário criado com sucesso.",
            "schema": {
              "$ref": "#/definitions/Prontuario"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cobranca/{id}": {
      "get": {
        "tags": [
          "Cobrança"
        ],
        "description": "Busca uma cobrança pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da cobrança"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cobrança encontrada.",
            "schema": {
              "$ref": "#/definitions/Cobranca"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Cobrança não encontrada."
          }
        }
      },
      "patch": {
        "tags": [
          "Cobrança"
        ],
        "description": "Atualiza os dados de uma cobrança existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da cobrança"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados da cobrança.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cobranca"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cobrança atualizada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Cobranca"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Cobrança não encontrada."
          }
        }
      },
      "delete": {
        "tags": [
          "Cobrança"
        ],
        "description": "Exclui uma cobrança pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da cobrança"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Cobrança deletada com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Cobrança não encontrada."
          }
        }
      }
    },
    "/cobranca/": {
      "get": {
        "tags": [
          "Cobrança"
        ],
        "description": "Retorna todas as cobranças cadastradas.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de cobranças.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cobranca"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Cobrança"
        ],
        "description": "Cadastra uma nova cobrança.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados da cobrança a ser criada.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cobranca"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cobrança criada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Cobranca"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/notificacao/{id}": {
      "get": {
        "tags": [
          "Notificação"
        ],
        "description": "Busca uma notificação pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da notificação"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Notificação encontrada.",
            "schema": {
              "$ref": "#/definitions/Notificacao"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Notificação não encontrada."
          }
        }
      },
      "patch": {
        "tags": [
          "Notificação"
        ],
        "description": "Atualiza os dados de uma notificação existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da notificação"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados da notificação.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notificacao"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notificação atualizada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Notificacao"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Notificação não encontrada."
          }
        }
      },
      "delete": {
        "tags": [
          "Notificação"
        ],
        "description": "Exclui uma notificação pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da notificação"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Notificação deletada com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Notificação não encontrada."
          }
        }
      }
    },
    "/notificacao/": {
      "get": {
        "tags": [
          "Notificação"
        ],
        "description": "Retorna todas as notificações cadastradas.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de notificações.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notificacao"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Notificação"
        ],
        "description": "Cadastra uma nova notificação.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados da nova notificação.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notificacao"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notificação criada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Notificacao"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/receita/{id}": {
      "get": {
        "tags": [
          "Receitas"
        ],
        "description": "Busca uma receita pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da receita"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Receita encontrada.",
            "schema": {
              "$ref": "#/definitions/Receita"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Receita não encontrada."
          }
        }
      },
      "patch": {
        "tags": [
          "Receitas"
        ],
        "description": "Atualiza os dados de uma receita existente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da receita"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Novos dados da receita.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Receita"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Receita atualizada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Receita"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Receita não encontrada."
          }
        }
      },
      "delete": {
        "tags": [
          "Receitas"
        ],
        "description": "Exclui uma receita pelo ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da receita"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Receita deletada com sucesso."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Receita não encontrada."
          }
        }
      }
    },
    "/receita/": {
      "get": {
        "tags": [
          "Receitas"
        ],
        "description": "Retorna todas as receitas cadastradas.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de receitas.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Receita"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Receitas"
        ],
        "description": "Cadastra uma nova receita.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Dados da nova receita.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Receita"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Receita criada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Receita"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "AddUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "testuser"
        },
        "password": {
          "type": "string",
          "example": "password123"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "testuser"
        },
        "password": {
          "type": "string",
          "example": "password123"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Login bem sucedido!"
        },
        "token": {
          "type": "string",
          "example": "dhsjgskjfgsdjhfsifuweifgsjjsldsçfdfbçcdsjcsjksçckjsdckjsç"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "antonio"
        },
        "password": {
          "type": "string",
          "example": "dhbshjkvhsfjvjsdkfhjvskdfjvskj"
        }
      }
    },
    "Admin": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "number",
          "example": 1
        },
        "nome": {
          "type": "string",
          "example": "Maria"
        },
        "sobrenome": {
          "type": "string",
          "example": "Silva"
        },
        "cpf": {
          "type": "string",
          "example": "12345678900"
        },
        "email": {
          "type": "string",
          "example": "admin@vet.com"
        },
        "senha": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "Tutor": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string",
          "example": "João"
        },
        "sobrenome": {
          "type": "string",
          "example": "Silva"
        },
        "cpf": {
          "type": "string",
          "example": "12345678900"
        },
        "data_nascimento": {
          "type": "string",
          "example": "2000-05-01"
        },
        "rua": {
          "type": "string",
          "example": "rua teste"
        },
        "numero": {
          "type": "string",
          "example": "801"
        },
        "bairro": {
          "type": "string",
          "example": "bairro teste"
        },
        "cidade": {
          "type": "string",
          "example": "city"
        },
        "complemento": {
          "type": "string",
          "example": "null"
        },
        "email": {
          "type": "string",
          "example": "joao@email.com"
        },
        "telefone": {
          "type": "string",
          "example": "11999999999"
        }
      }
    },
    "Paciente": {
      "type": "object",
      "properties": {
        "tutor_id": {
          "type": "string",
          "example": "6"
        },
        "nome": {
          "type": "string",
          "example": "Rex"
        },
        "sexo": {
          "type": "string",
          "example": "M"
        },
        "raca": {
          "type": "string",
          "example": "Labrador"
        },
        "cor_pelagem": {
          "type": "string",
          "example": "Caramelo"
        },
        "data_nascimento": {
          "type": "string",
          "example": "2020-01-01"
        },
        "animal_id": {
          "type": "string",
          "example": "9"
        }
      }
    },
    "Consulta": {
      "type": "object",
      "properties": {
        "consulta_id": {
          "type": "number",
          "example": 1
        },
        "data": {
          "type": "string",
          "example": "2025-07-17T10:00:00Z"
        },
        "motivo": {
          "type": "string",
          "example": "Vacinação"
        },
        "paciente": {
          "type": "number",
          "example": 1
        },
        "tutor": {
          "type": "number",
          "example": 1
        },
        "veterinario": {
          "type": "number",
          "example": 2
        }
      }
    },
    "Receita": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "descricao": {
          "type": "string",
          "example": "Antibiótico 2x ao dia"
        },
        "valor": {
          "type": "number",
          "example": 120.5
        }
      }
    },
    "Medicamento": {
      "type": "object",
      "properties": {
        "med_id": {
          "type": "number",
          "example": 1
        },
        "nome": {
          "type": "string",
          "example": "Vermífugo X"
        },
        "principio_ativo": {
          "type": "string",
          "example": "Albendazol"
        },
        "forma_farmaceutica": {
          "type": "string",
          "example": "Comprimido"
        },
        "dosagem": {
          "type": "string",
          "example": "500mg"
        },
        "quantidade": {
          "type": "number",
          "example": 50
        },
        "validade": {
          "type": "string",
          "example": "2025-12-31"
        }
      }
    },
    "Estoque": {
      "type": "object",
      "properties": {
        "estoque_id": {
          "type": "number",
          "example": 1
        },
        "medicamentos": {
          "type": "array",
          "example": [
            "id_medicamento_1",
            "id_medicamento_2"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Cobranca": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "cliente": {
          "type": "string",
          "example": "João"
        },
        "valor": {
          "type": "number",
          "example": 150
        },
        "status": {
          "type": "string",
          "example": "pago"
        }
      }
    },
    "Prontuario": {
      "type": "object",
      "properties": {
        "prontuario_id": {
          "type": "number",
          "example": 1
        },
        "consulta": {
          "type": "number",
          "example": 1
        },
        "observacoes": {
          "type": "string",
          "example": "Animal saudável"
        },
        "prescricao": {
          "type": "string",
          "example": "Repouso e alimentação"
        }
      }
    },
    "Notificacao": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "mensagem": {
          "type": "string",
          "example": "Vacina agendada"
        },
        "tipo": {
          "type": "string",
          "example": "lembrete"
        },
        "dataEnvio": {
          "type": "string",
          "example": "2025-07-15T10:00:00Z"
        }
      }
    },
    "Veterinario": {
      "type": "object",
      "properties": {
        "vet_id": {
          "type": "number",
          "example": 1
        },
        "nome": {
          "type": "string",
          "example": "Ana"
        },
        "sobrenome": {
          "type": "string",
          "example": "Costa"
        },
        "crmv": {
          "type": "string",
          "example": "SP123456"
        },
        "telefone": {
          "type": "string",
          "example": "11987654321"
        },
        "email": {
          "type": "string",
          "example": "ana.vet@clinicavet.com"
        },
        "consultas": {
          "type": "array",
          "example": [],
          "items": {}
        }
      }
    }
  }
}